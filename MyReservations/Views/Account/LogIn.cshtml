@model MyReservations.Models.LoginViewModel
@{
    ViewData["Title"] = "Login to other Account";
}


<h1 class="title-font color position">@ViewData["Title"]</h1>

<style>

    body {
        background-color: black;
        margin: 0;
        padding: 0;
    }


    .profile-button {
        position: absolute;
        top: 15px;
        right: 20px;
        display: inline-block;
        padding: 10px 20px;
        font-size: 18px;
        color: black;
        background-color: white;
        border-radius: 5px;
        text-decoration: none;
    }


        .profile-button:hover {
            color: black;
            background-color: white;
        }


    .color {
        color: white;
    }

    .position {
        margin-top: 150px;
    }

    .down {
        margin-right: 20px;
    }

    .error-message {
        color: red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "error-message" })

    <div class="form-group title-font">
        @Html.LabelFor(m => m.Username, null, new { @class = "control-label color" })
        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })F
        @Html.ValidationMessageFor(m => m.Username)
    </div>

    <div class="form-group title-font">
        @Html.LabelFor(m => m.Password, null, new { @class = "control-label color" })
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Password)
    </div>

    <button type="submit" class="font btn btn-secondary down">Login Account</button>

    <a href="@Url.Action("Register", "Account")" class="font btn btn-secondary position">Don't have an account? Register Here!</a>
}